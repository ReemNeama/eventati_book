# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # Style rules
    prefer_single_quotes: true
    prefer_const_constructors: true
    prefer_const_declarations: true
    avoid_print: true
    use_key_in_widget_constructors: true

    # Error prevention rules
    avoid_empty_else: true
    avoid_relative_lib_imports: true
    avoid_returning_null_for_future: true
    avoid_types_as_parameter_names: true
    cancel_subscriptions: true
    close_sinks: true
    empty_statements: true
    hash_and_equals: true
    iterable_contains_unrelated_type: true
    list_remove_unrelated_type: true
    no_duplicate_case_values: true
    unrelated_type_equality_checks: true

    # Performance rules
    avoid_unnecessary_containers: true
    prefer_final_fields: true
    prefer_final_locals: true
    prefer_interpolation_to_compose_strings: true
    unnecessary_const: true
    unnecessary_this: true

    # Documentation rules
    public_member_api_docs: false  # Enable this when project is more mature

analyzer:
  errors:
    # Treat potential errors as errors
    missing_required_param: error
    missing_return: error
    must_be_immutable: error

    # Treat style issues as warnings
    deprecated_member_use: warning
    deprecated_member_use_from_same_package: warning
    unused_import: warning
    unused_local_variable: warning

  exclude:
    # Exclude generated files
    - '**/*.g.dart'
    - '**/*.freezed.dart'
    - 'lib/generated_plugin_registrant.dart'
    - '**/*.mocks.dart'
    - 'test/.test_coverage.dart'
    - 'bin/cache/**'
    - 'lib/generated_plugin_registrant.dart'

# dart_code_metrics configuration
dart_code_metrics:
  metrics:
    cyclomatic-complexity: 20
    number-of-parameters: 4
    maximum-nesting-level: 5
    source-lines-of-code: 50
    maintainability-index: 50
  metrics-exclude:
    - test/**
    - '**/*.g.dart'
    - '**/*.freezed.dart'
  rules:
    # Style
    - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block
    - prefer-trailing-comma
    - prefer-conditional-expressions
    - no-equal-then-else
    # Design
    - avoid-unnecessary-setstate
    - avoid-returning-widgets
    - avoid-unnecessary-type-casts
    - avoid-unused-parameters
    - prefer-first
    - prefer-last
    # Performance
    - avoid-unnecessary-async
    # Error prevention
    - avoid-missing-enum-constant-in-map
    - avoid-late-keyword
    - avoid-throw-in-catch-block
    - avoid-non-null-assertion
    - avoid-nested-conditional-expressions
  anti-patterns:
    - long-method
    - long-parameter-list

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
